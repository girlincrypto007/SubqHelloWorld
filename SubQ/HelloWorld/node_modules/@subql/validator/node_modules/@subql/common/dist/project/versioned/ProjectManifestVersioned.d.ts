import { SubqlDatasource } from '@subql/types';
import { IProjectManifest } from '../types';
import { ProjectManifestV0_0_1Impl } from './v0_0_1';
import { ProjectManifestV0_2_0Impl } from './v0_2_0';
export declare type VersionedProjectManifest = {
    specVersion: string;
};
export declare function manifestIsV0_0_1(manifest: IProjectManifest): manifest is ProjectManifestV0_0_1Impl;
export declare function manifestIsV0_2_0(manifest: IProjectManifest): manifest is ProjectManifestV0_2_0Impl;
export declare class ProjectManifestVersioned implements IProjectManifest {
    private _impl;
    constructor(projectManifest: VersionedProjectManifest);
    get asImpl(): IProjectManifest;
    get isV0_0_1(): boolean;
    get asV0_0_1(): ProjectManifestV0_0_1Impl;
    get isV0_2_0(): boolean;
    get asV0_2_0(): ProjectManifestV0_2_0Impl;
    validate(): void;
    get dataSources(): SubqlDatasource[];
    get schema(): string;
    get specVersion(): string;
    get description(): string;
    get repository(): string;
}
