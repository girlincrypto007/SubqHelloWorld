"use strict";
// Copyright 2020-2021 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.uploadToIpfs = void 0;
const tslib_1 = require("tslib");
const fs_1 = (0, tslib_1.__importDefault)(require("fs"));
const path_1 = (0, tslib_1.__importDefault)(require("path"));
const common_1 = require("@subql/common");
const ipfs_http_client_1 = (0, tslib_1.__importDefault)(require("ipfs-http-client"));
const js_yaml_1 = (0, tslib_1.__importDefault)(require("js-yaml"));
async function uploadToIpfs(ipfsEndpoint, projectDir) {
    const ipfs = ipfs_http_client_1.default.create({ url: ipfsEndpoint });
    const projectManifestPath = path_1.default.resolve(projectDir, 'project.yaml');
    const manifest = (0, common_1.loadProjectManifest)(projectManifestPath).asImpl;
    if ((0, common_1.manifestIsV0_2_0)(manifest)) {
        const entryPaths = manifest.dataSources.map((ds) => ds.mapping.file);
        const schemaPath = manifest.schema.file;
        // Upload referenced files to IPFS
        const [schema, ...entryPoints] = await Promise.all([schemaPath, ...entryPaths].map((filePath) => uploadFile(ipfs, fs_1.default.createReadStream(path_1.default.resolve(projectDir, filePath))).then((cid) => `ipfs://${cid}`)));
        // Update referenced file paths to IPFS cids
        manifest.schema.file = schema;
        entryPoints.forEach((entryPoint, index) => {
            manifest.dataSources[index].mapping.file = entryPoint;
        });
    }
    else {
        throw new Error('Unsupported project manifest spec, only 0.2.0 is supported');
    }
    // Upload schema
    return uploadFile(ipfs, toMinifiedYaml(manifest));
}
exports.uploadToIpfs = uploadToIpfs;
async function uploadFile(ipfs, content) {
    const result = await ipfs.add(content, { pin: true, cidVersion: 0 });
    return result.cid.toString();
}
function toMinifiedYaml(manifest) {
    return js_yaml_1.default.dump(manifest, {
        sortKeys: true,
        condenseFlow: true,
    });
}
//# sourceMappingURL=publish-controller.js.map