{"version":3,"file":"build.js","sourceRoot":"","sources":["../../src/commands/build.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,2BAA2C;AAC3C,6DAAwB;AACxB,4CAA8C;AAC9C,mEAA8B;AAC9B,iDAAoC;AACpC,uEAAkC;AAElC,MAAM,aAAa,GAAG,CAAC,GAAW,EAAE,UAAkB,EAAE,WAAqB,EAAyB,EAAE,CAAC,CAAC;IACxG,MAAM,EAAE,MAAM;IACd,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY;IAChD,KAAK,EAAE,cAAI,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC;IACrC,OAAO,EAAE,WAAW,IAAI,mBAAmB;IAC3C,MAAM,EAAE;QACN,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,cAAc;gBACvB,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;gBACpC,OAAO,EAAE;oBACP,eAAe,EAAE;wBACf,WAAW,EAAE,KAAK;qBACnB;iBACF;aACF;SACF;KACF;IAED,OAAO,EAAE;QACP,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;KACnC;IAED,MAAM,EAAE;QACN,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC9B,QAAQ,EAAE,cAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACnC,aAAa,EAAE,UAAU;QACzB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC,CAAC;AAEH,MAAqB,KAAM,SAAQ,iBAAO;IAQxC,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAElC,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAChF,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,KAAK,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;QAEnE,IAAI,CAAC,IAAA,cAAS,EAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;SAC5D;QAED,sCAAsC;QACtC,IAAI;YACF,MAAM,kBAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;SAC3D;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;SAChD;QAED,mEAAmE;QACnE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAA,iBAAY,EAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,IAAI,eAAe,CAAC,CAAC;QAE1E,MAAM,MAAM,GAAG,IAAA,qBAAK,EAClB,aAAa,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC;QAC3C,qDAAqD;SACtD,CAAC;QAEF,8DAA8D;QAC9D,IAAI,CAAC,GAAG,CAAC,gBAAgB,KAAK,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAClE,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACpC,IAAA,iBAAO,EAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBACnC,IAAI,KAAK,EAAE;oBACT,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACxB,OAAO;iBACR;gBAED,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE;oBACrB,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;oBAE5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBACjC,OAAO;iBACR;gBAED,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gBACnC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;AAxDH,wBAyDC;AAxDQ,iBAAW,GAAG,kCAAkC,CAAC;AAEjD,WAAK,GAAG;IACb,QAAQ,EAAE,eAAK,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,cAAc,EAAC,CAAC;IAChE,IAAI,EAAE,eAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,YAAY,EAAC,CAAC;CACjG,CAAC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {lstatSync, readFileSync} from 'fs';\nimport path from 'path';\nimport {Command, flags} from '@oclif/command';\nimport webpack from 'webpack';\nimport {merge} from 'webpack-merge';\nimport Validate from './validate';\n\nconst getBaseConfig = (dir: string, outputPath: string, development?: boolean): webpack.Configuration => ({\n  target: 'node',\n  mode: development ? 'development' : 'production',\n  entry: path.join(dir, 'src/index.ts'),\n  devtool: development && 'inline-source-map',\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        exclude: /node_modules/,\n        loader: require.resolve('ts-loader'),\n        options: {\n          compilerOptions: {\n            declaration: false,\n          },\n        },\n      },\n    ],\n  },\n\n  resolve: {\n    extensions: ['.tsx', '.ts', '.js'],\n  },\n\n  output: {\n    path: path.dirname(outputPath),\n    filename: path.basename(outputPath),\n    libraryTarget: 'commonjs',\n    clean: true,\n  },\n});\n\nexport default class Build extends Command {\n  static description = 'Build this SubQuery project code';\n\n  static flags = {\n    location: flags.string({char: 'l', description: 'local folder'}),\n    mode: flags.enum({options: ['production', 'prod', 'development', 'dev'], default: 'production'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = this.parse(Build);\n\n    const directory = flags.location ? path.resolve(flags.location) : process.cwd();\n    const isDev = flags.mode === 'development' || flags.mode === 'dev';\n\n    if (!lstatSync(directory).isDirectory()) {\n      this.error('Argument `location` is not a valid directory');\n    }\n\n    // Check that we're in a valid project\n    try {\n      await Validate.run(['--silent', '--location', directory]);\n    } catch (e) {\n      this.error('Directory is not a valid project');\n    }\n\n    // Get the output location from the project package.json main field\n    const pjson = JSON.parse(readFileSync(path.join(directory, 'package.json')).toString());\n    const outputPath = path.resolve(directory, pjson.main || 'dist/index.js');\n\n    const config = merge(\n      getBaseConfig(directory, outputPath, isDev)\n      // Can allow projects to override webpack config here\n    );\n\n    // Use webpack to build TS code and package into a single file\n    this.log(`Building code${isDev ? ' with development mode' : ''}`);\n    await new Promise((resolve, reject) => {\n      webpack(config).run((error, stats) => {\n        if (error) {\n          reject(error);\n          this.log(error.message);\n          return;\n        }\n\n        if (stats.hasErrors()) {\n          const info = stats.toJson();\n\n          reject(info.errors[0]);\n          this.log(info.errors[0].details);\n          return;\n        }\n\n        this.log('Finished building code');\n        resolve(true);\n      });\n    });\n  }\n}\n"]}